2021/08/26
Added functions:
- print_board (for debugging)
- print_board_alg
- create_empty_board (dict of tuples to model chess board squares)
- spawn_starting_pieces
- convert_alg_to_grid (converting input into numbers for processing game logic)
- convert_grid_to_alg (converting game logic results to user-friendly messages)
- is_same_team (refactored from code to see if two pieces are both lower/upper)
- validate_move - WIP, completed move rules for PAWNS
- move_piece (updates board)
- wrote MAIN
To-Do:
- add move rules for other pieces to validate_move

2021/08/27
Updated functions:
- combined create_empty_board with spawn_starting_pieces into init_board, since
  there's no scenario where you'd intentionally run one without running the
  other
- renamed convert_alg_to_grid to get_square_alg_to_grid to follow the
  nomeclature "get_..." if returning data, not void or returning bool
- renamed convert_grid_to_alg to get_square_grid_to_alg to follow the
  nomeclature "get_..." if returning data
- refactored validate_move and relocated the logic that calculates all possible
  valid moves for any piece into many new functions that only calculate possible
  valid moves for a specific type of piece, such as get_pawn_moves
- renamed validate_move to is_valid_move to follow the nomeclature "is..." if
  returning bool
Added functions:
- get_pawn_moves - given a pawn coordinates as a tuple and board as dict of
  tuples, return all possible valid moves as a list of tuples
- get_rook_moves - given a rook coordinates as a tuple and board as dict of
  tuples, return all possible valid moves as a list of tuples
- get_bishop_moves - given a bishop coordinates as a tuple and board as dict of
  tuples, return all possible valid moves as a list of tuples
- get_knight_moves - given a knight coordinates as a tuple and board as dict of
  tuples, return all possible valid moves as a list of tuples
- rewrote error messages to be more specific such as "Move invalid." to
  "Cannot take your own pieces - Please try again.",
  "Cannot move another player's piece - Please try again.",
  "That square has no pieces to move - Please try again.",
  etc.
- added extra newline only when advancing a turn, turns don't advance if the
  user needs to retry or reenter coordinates for any reason - improves
  readability
To-Do:
- add get_queen_moves
- add get_king_moves
- add checkmate

2021/08/28
Updated functions:
- debugged get_knight_moves by catching KeyError thrown when evaluating squares
  that are out of bounds
Added functions:
- get_queen_moves skeleton - no function
- get_queen_moves skeleton - no function
To-Do:
- add get_queen_moves
- add get_king_moves
- add checkmate

2021/08/29
Updated functions:
- added queen rules to get_queen_moves based on code from get_bishop_moves,
  now function works
- removed redundant variable from get_bishop_moves
- fixed typo in comments explaining logic in get_knight_moves
To-Do:
- add get_king_moves
- add checkmate
- get_rook_moves code can be refactored based on get_bishop_moves
- can get_pawn_moves be refactored based on get_bishop_moves?
- didn't end up using print_board function, remove?

2021/08/30
Updated functions:
- refactored get_bishop_moves by changing out if-else for iterable list of
  steps when evaluating each direction
- refactored get_queen_moves by changing out if-else for iterable list of
  steps when evaluating each direction
- refactored get_knight_moves by changing out if-else for iterable list of
  steps when evaluating each direction
